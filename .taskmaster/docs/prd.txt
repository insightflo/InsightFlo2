# 서비스 개요 
## Overview
**분리 아키텍처 기반의 크로스플랫폼 MVP를 통해 한국 시장의 유효성을 검증하고 시스템 안정성을 확보하는 것**을 목표로 합니다. 
이 프로젝트는 데이터 수집 시스템과 앱 서비스를 완전히 독립적으로 운영하는 **분리 아키텍처**를 핵심으로 합니다. 
이를 통해 데이터 수집 장애가 앱 안정성에 영향을 미치지 않도록 보장합니다. 
사용자에게는 Flutter 크로스플랫폼의 빠른 개발과 일관된 성능(0.8초 이내 앱 시작), 키워드 등록을 통한 개인화된 뉴스 요약 제공을 목표로 합니다. 

## Core Features
- **분리 아키텍처 (Separated Architecture)**
  - **기능**: 데이터 수집과 앱 서비스를 물리적, 논리적으로 완전히 분리하여 운영합니다.
  - **중요성**: 한쪽 시스템의 장애가 다른 쪽에 영향을 주지 않아 전체 시스템의 안정성과 가용성을 극대화합니다.
  - **작동 방식**: 별도의 데이터 수집 시스템이 백그라운드에서 데이터를 수집/분석하여 Supabase에 저장하면, API를 통해 Flutter 앱이 해당 데이터를 조회합니다.

- **개인화 뉴스 피드 및 푸시 알림 (Personalized Feed & Push)**
  - **기능**: 사용자가 설정한 관심 키워드를 기반으로 맞춤형 뉴스 피드를 제공하고, 관련성 높은 중요 뉴스를 FCM 푸시 알림으로 전송합니다.
  - **중요성**: 사용자에게 가장 관련성 높은 정보를 선별하여 제공함으로써 앱의 가치와 사용자 참여도를 높입니다.
  - **작동 방식**: backend server에서 사용자들의 키워드와 뉴스 데이터를 비교하여 중요도 점수를 계산하여 저장하고, 신규 뉴스는 중요 뉴스와 사용자 설정 키워드 뉴스가 3:7 비중으로 조회됩니다. 사용자 관심 키워드와 관련 높은 중요 뉴스는 발생 시, 즉시 사용자에게 푸시 됩니다. 

- **크로스플랫폼 Flutter 앱 성능 (Cross-Platform Flutter Performance)**
  - **기능**: Dart와 Flutter를 사용한 크로스플랫폼 앱으로, Drift DB를 통한 로컬 캐싱과 Material 3 UI를 적용합니다.
  - **중요성**: 사용자에게 0.8초 이내의 빠른 앱 시작 속도와 부드러운 UI/UX를 제공하며, Android와 iOS 모두에서 일관된 경험을 보장합니다.
  - **작동 방식**: Clean Architecture를 기반으로 UI, 비즈니스 로직, 데이터 레이어를 명확히 분리하여 성능과 유지보수성을 동시에 확보합니다.

# User Experience
- **User Personas**: 금융 정보에 민감하고, 바쁜 일상 속에서 효율적인 투자 정보 습득을 원하는 20대~40대 개인 투자자. 기술 활용에 익숙하며, 개인화된 서비스에 대한 선호도가 높습니다.

- **Key User Flows**:
  1.  **정보 수신**: 사용자의 관심사와 관련된 중요 뉴스(예. 키워드: 삼성전자, 뉴스: 트럼프 반도체 수입품에 관세부가 )가 발생하면 즉시 푸시 알림을 받습니다.
  2.  **정보 탐색**: 앱을 실행하여 개인화된 뉴스 피드를 확인하고, 관심 키워드 칩을 통해 빠르게 정보를 필터링합니다.
  3.  **정보 소화**: AI가 요약한 뉴스 카드(3줄 요약, 감정, 영향도)를 통해 내용을 빠르게 파악하고, 관심 있는 뉴스는 클릭하여 상세 내용을 확인하거나 북마크/공유합니다.
  4.  **개인화 설정**: 설정 화면에서 자신의 관심 키워드를 추가/삭제하여 더 정확한 맞춤 정보를 받도록 설정합니다.

- **UI/UX Considerations**:
  - Google의 Material 3 디자인 가이드라인을 준수하여 사용자에게 익숙하고 직관적인 UI를 제공합니다.
  - `NewsCard` 위젯은 감정(아이콘), 제목, 3줄 요약, 키워드, 시간 등 핵심 정보를 한눈에 파악할 수 있도록 시각적으로 구성합니다.
  - `ListView.builder`와 무한 스크롤을 적극적으로 활용하여 부드러운 스크롤 성능을 보장합니다.
  - 다크 테마를 지원하여 사용자의 시력 보호 및 배터리 절약에 기여합니다.

# 기능 요구사항 (Functional Requirements)

1. 사용자 인증 및 계정 관리

  1.1 인증 기능

  기본_인증:
    - 이메일/패스워드 회원가입
    - 이메일/패스워드 로그인
    - 로그아웃 기능
    - JWT 토큰 기반 세션 관리

  고급_인증:
    - 이메일 인증 (회원가입 시)
    - 패스워드 재설정 (이메일 링크)
    - 소셜 로그인 (Google, Apple, Kakao, Naver) - 선택사항
    - 자동 로그인 (토큰 갱신)

  보안_요구사항:
    - 비밀번호 최소 8자, 영문+숫자+특수문자
    - JWT 토큰 만료 관리 (Access: 1시간, Refresh: 30일)
    - 디바이스별 세션 관리

  1.2 프로필 관리

  기본_프로필:
    - 닉네임 설정/변경
    - 프로필 이미지 업로드 (선택사항)
    - 계정 삭제 (데이터 완전 삭제)

  개인화_설정:
    - 관심 키워드 관리 (최대 10개)
    - 알림 설정 (푸시, 시간대)
    - 언어 설정 (한국어 기본)

2. 뉴스 피드 및 콘텐츠 소비

  2.1 개인화 뉴스 피드

  피드_기본기능:
    - AI 분석된 뉴스 카드 리스트 표시
    - 무한 스크롤 (페이지네이션)
    - Pull-to-Refresh 새로고침
    - 로딩/빈/에러 상태 처리

  뉴스카드_구성요소:
    - 제목 (최대 2줄)
    - AI 3줄 요약
    - 감정 분석 결과 (긍정/부정/중립 아이콘)
    - 키워드 태그 (최대 5개)
    - 발행 시간 (상대시간 표시)
    - 북마크 버튼
    - 공유 버튼

  개인화_알고리즘:
    - 사용자 키워드 매칭 점수 (40%)
    - 포트폴리오 관련도 점수 (30%)
    - 감정 분석 가중치 (20%)
    - 시간 가중치 (10%)
    - 사용자 행동 기반 학습 (클릭, 북마크)

  2.2 뉴스 상세 보기

  상세화면_기능:
    - 뉴스 전문 표시 (웹뷰)
    - AI 요약 정보 하단 고정
    - 관련 뉴스 추천 (3-5개)
    - 북마크/공유 기능
    - 뒤로가기 네비게이션

  2.3 검색 및 필터링

  검색_기능:
    - 실시간 검색어 입력
    - 검색어 자동완성 (최근 검색어)
    - 검색 결과 하이라이트
    - 검색 히스토리 관리

  필터링_옵션:
    - 키워드별 필터링
    - 감정별 필터링 (긍정/부정/중립)
    - 기간별 필터링 (오늘/이번주/이번달)
    - 정렬 옵션 (최신순/관련도순/인기순)

3. 사용자 개인화 기능

  3.1 키워드 관리

  키워드_관리:
    - 키워드 검색 및 추가 (자동완성)
    - 키워드별 중요도 설정 (1-5점)
    - 키워드 삭제
    - 키워드별 뉴스 개수 표시
    - 키워드 추천 (AI 기반)

  키워드_제약조건:
    - 최대 10개 키워드
    - 키워드당 최대 20자
    - 중복 키워드 방지
    - 부적절한 키워드 필터링

  3.2 포트폴리오 관리 (선택사항)

  포트폴리오_기능:
    - 보유 종목 추가/삭제
    - 종목별 비중 설정
    - 포트폴리오 기반 뉴스 필터링
    - 투자 영향도 분석 표시

4. 북마크 및 사용자 데이터

  4.1 북마크 기능

  북마크_관리:
    - 뉴스 북마크 추가/제거
    - 북마크 목록 보기
    - 북마크 검색 기능
    - 북마크 폴더 관리 (선택사항)
    - 북마크 내보내기 (JSON)

  북마크_제약조건:
    - 최대 1000개 북마크
    - 30일 이후 자동 정리 (선택사항)

  4.2 읽기 기록

  읽기_기록:
    - 읽은 뉴스 표시 (회색 처리)
    - 읽기 통계 (일/주/월별)
    - 읽기 기록 삭제 기능

5. 푸시 알림 시스템

  5.1 알림 기능

  알림_종류:
    - 개인화 뉴스 알림 (키워드 기반)
    - 중요 뉴스 알림 (긴급/속보)
    - 포트폴리오 관련 알림
    - 일일 요약 알림

  알림_설정:
    - 알림 켜기/끄기
    - 알림 시간대 설정 (09:00-22:00)
    - 알림 빈도 설정 (즉시/1시간/3시간)
    - 키워드별 알림 설정
    - 방해금지 모드 (주말, 휴일)

  알림_동작:
    - 포그라운드 알림 (인앱)
    - 백그라운드 알림 (푸시)
    - 딥링크 (특정 뉴스로 이동)
    - 알림 히스토리 관리

6. 오프라인 및 캐싱 기능

  6.1 오프라인 지원

  캐싱_전략:
    - 최신 뉴스 100개 로컬 저장
    - 북마크된 뉴스 완전 캐싱
    - 사용자 설정 로컬 저장
    - 이미지 캐싱 (썸네일)

  동기화_기능:
    - 온라인 복귀 시 자동 동기화
    - 충돌 해결 (서버 우선)
    - 동기화 상태 표시
    - 수동 동기화 버튼

7. API 서버 기능

  7.1 인증 API

  엔드포인트:
    - POST /api/auth/signup (회원가입)
    - POST /api/auth/signin (로그인)
    - POST /api/auth/signout (로그아웃)
    - POST /api/auth/refresh (토큰 갱신)
    - POST /api/auth/reset-password (비밀번호 재설정)

  7.2 뉴스 API

  엔드포인트:
    - GET /api/news/personalized (개인화 피드)
    - GET /api/news/search (검색)
    - GET /api/news/{id} (상세 조회)
    - GET /api/news/trending (인기 뉴스)

  파라미터:
    - page, limit (페이지네이션)
    - sort (정렬: latest, relevance, popularity)
    - filter (키워드, 감정, 기간)
    - user_id (개인화)

  7.3 사용자 데이터 API

  키워드_API:
    - GET /api/user/keywords (키워드 목록)
    - POST /api/user/keywords (키워드 추가)
    - DELETE /api/user/keywords/{id} (키워드 삭제)
    - PUT /api/user/keywords/{id} (키워드 수정)

  북마크_API:
    - GET /api/user/bookmarks (북마크 목록)
    - POST /api/user/bookmarks (북마크 추가)
    - DELETE /api/user/bookmarks/{id} (북마크 삭제)

  포트폴리오_API:
    - GET /api/user/portfolio (포트폴리오 조회)
    - POST /api/user/portfolio (종목 추가)
    - DELETE /api/user/portfolio/{id} (종목 삭제)

  7.4 푸시 알림 API

  알림_API:
    - POST /api/push/register (FCM 토큰 등록)
    - POST /api/push/send (알림 발송)
    - GET /api/push/history (알림 히스토리)
    - PUT /api/push/settings (알림 설정 변경)

#  비기능 요구사항 (Non-Functional Requirements)

1. 성능 요구사항

  1.1 모바일 앱 성능

  시작_성능:
    - 콜드 시작: < 3초 (Android), < 2초 (iOS)
    - 웜 시작: < 1초
    - 스플래시 화면 최대 2초

  UI_성능:
    - 60 FPS 스크롤 성능 유지
    - 화면 전환 애니메이션 < 300ms
    - 버튼 반응 시간 < 100ms
    - 메모리 사용량 < 200MB

  네트워크_성능:
    - API 응답 시간 < 500ms (P95)
    - 이미지 로딩 < 2초
    - 오프라인 모드 즉시 전환
    - 네트워크 재연결 자동 복구

  1.2 API 서버 성능

  응답_성능:
    - 개인화 뉴스 API: < 300ms (P95)
    - 검색 API: < 500ms (P95)
    - 인증 API: < 200ms (P95)
    - 정적 컨텐츠: < 100ms

  처리량:
    - 동시 사용자 1000명 지원
    - API 요청 10,000 RPM 처리
    - 데이터베이스 연결 풀 100개

  캐싱_성능:
    - CDN 캐시 히트율 > 90%
    - Redis 캐시 응답 < 10ms
    - 브라우저 캐싱 24시간

2. 확장성 요구사항

  2.1 데이터 확장성

  데이터_볼륨:
    - 일일 뉴스 처리량: 10,000개
    - 사용자 수: 10,000명 (Phase 1)
    - 북마크 데이터: 사용자당 1,000개
    - 키워드 데이터: 사용자당 20개

  스토리지_확장성:
    - 데이터베이스 용량 자동 확장
    - 이미지 CDN 무제한 확장
    - 로그 데이터 30일 보관

  2.2 시스템 확장성

  서버_확장성:
    - Vercel 서버리스 자동 확장
    - 데이터베이스 읽기 전용 복제본
    - 로드 밸런싱 자동 구성

  모바일_확장성:
    - Android API 21+ 지원
    - iOS 12+ 지원
    - 다양한 화면 크기 대응

3. 가용성 요구사항

  3.1 시스템 가용성

  가용성_목표:
    - 서비스 가용성: 99.9% (월 43분 이하 다운타임)
    - 데이터베이스 가용성: 99.95%
    - API 서버 가용성: 99.9%

  장애_복구:
    - 자동 장애 감지: < 1분
    - 서비스 복구: < 5분
    - 데이터 백업: 일 1회, 보관 30일
    - 재해 복구 계획 수립

  모니터링:
    - 실시간 서비스 상태 모니터링
    - 알림 시스템 (Slack, 이메일)
    - 성능 메트릭 수집 (Vercel Analytics)

  3.2 모바일 앱 안정성

  앱_안정성:
    - 크래시율 < 0.1%
    - ANR(Application Not Responding) < 0.05%
    - 메모리 누수 방지
    - 배터리 최적화

4. 보안 요구사항

  4.1 데이터 보안

  데이터_보호:
    - 개인정보 암호화 저장 (AES-256)
    - 패스워드 해싱 (bcrypt)
    - API 통신 HTTPS 강제
    - JWT 토큰 서명 및 검증

  인증_보안:
    - JWT 토큰 만료 관리
    - Refresh Token Rotation
    - 비정상 로그인 감지
    - 계정 잠금 정책 (5회 실패)

  API_보안:
    - Rate Limiting (사용자별 100 req/min)
    - CORS 정책 설정
    - SQL Injection 방지
    - XSS 공격 방지

  4.2 모바일 보안

  앱_보안:
    - 앱 서명 인증서 관리
    - 디버그 모드 비활성화 (프로덕션)
    - 민감 정보 로컬 암호화
    - 루팅/탈옥 디바이스 감지

  네트워크_보안:
    - Certificate Pinning
    - 프록시 감지
    - 중간자 공격 방지

5. 사용성 요구사항

  5.1 UI/UX 품질

  디자인_표준:
    - Material 3 Design 준수
    - 접근성 가이드라인 WCAG 2.1 AA 준수
    - 다크 테마 지원
    - 다양한 화면 크기 대응 (5"-7")

  사용자_경험:
    - 직관적인 네비게이션
    - 일관된 상호작용 패턴
    - 명확한 피드백 메시지
    - 에러 복구 가이드 제공

  국제화:
    - 한국어 기본 지원
    - 영어 지원 (선택사항)
    - 시간대 자동 설정
    - 통화 단위 표시

  5.2 접근성

  접근성_기능:
    - 스크린 리더 지원
    - 폰트 크기 조절 (125%, 150%)
    - 고대비 모드 지원
    - 음성 입력 지원
    - 키보드 네비게이션

6. 운영 및 모니터링 요구사항

  6.1 로깅 및 모니터링

  로깅_정책:
    - 모든 API 요청/응답 로깅
    - 에러 로그 상세 기록
    - 사용자 행동 추적 (익명화)
    - 성능 메트릭 수집

  모니터링_도구:
    - Vercel Analytics (웹 성능)
    - Sentry (에러 추적)
    - Google Analytics (사용자 행동)
    - Supabase Analytics (DB 성능)

  알림_정책:
    - 장애 발생 시 즉시 알림
    - 성능 임계치 초과 알림
    - 보안 이벤트 알림
    - 일일 운영 보고서

  6.2 배포 및 운영

  배포_전략:
    - 블루-그린 배포 (무중단)
    - 점진적 배포 (Progressive Rollout)
    - 롤백 계획 수립
    - A/B 테스트 지원

  운영_프로세스:
    - CI/CD 파이프라인 (GitHub Actions)
    - 자동화된 테스트 실행
    - 코드 품질 검사 (SonarCloud)
    - 보안 취약점 스캔

7. 테스트 요구사항

  7.1 테스트 커버리지

  단위_테스트:
    - 비즈니스 로직 커버리지 > 80%
    - API 엔드포인트 커버리지 > 90%
    - 유틸리티 함수 커버리지 100%

  통합_테스트:
    - API 통합 테스트 100%
    - 데이터베이스 통합 테스트
    - 외부 서비스 Mock 테스트

  E2E_테스트:
    - 핵심 사용자 플로우 테스트
    - 다양한 디바이스 테스트
    - 성능 회귀 테스트

  7.2 품질 보증

  품질_기준:
    - 코드 리뷰 필수
    - 정적 분석 통과 (ESLint, Dart Analyzer)
    - 메모리 누수 검사
    - 보안 취약점 스캔 통과

  ---
# 우선순위 매트릭스

  Phase 1: MVP
  1. 사용자 인증 및 기본 프로필 ⭐⭐⭐
  2. 개인화 뉴스 피드 (키워드 기반) ⭐⭐⭐
  3. 뉴스 상세보기 및 북마크 ⭐⭐⭐
  4. 기본 검색 및 필터링 ⭐⭐⭐
  5. 오프라인 캐싱 기본 기능 ⭐⭐

  Phase 2: 사용자 확장
  1. 푸시 알림 시스템 ⭐⭐⭐
  2. 키워드 관리 고도화 ⭐⭐
  3. 포트폴리오 기본 기능 ⭐⭐
  4. 앱 성능 최적화 ⭐⭐

  Phase 3: 고도화
  1. 고급 개인화 알고리즘 ⭐
  2. 소셜 로그인 ⭐
  3. 고급 검색 기능 ⭐
  4. 사용자 분석 대시보드 ⭐