# 사용자 인증 화면 디자인 요청

**요청자**: PM  
**우선순위**: HIGH  
**예상 소요 시간**: 2-3일  
**관련 Task**: Task 3 (Backend JWT), Task 4 (Frontend 구조)

## 📋 작업 개요
InsightFlo 앱의 사용자 인증 관련 화면들을 디자인해주세요. Backend팀의 JWT 인증 시스템과 Frontend팀의 Flutter 앱 구조 작업과 병렬로 진행됩니다.

## 🎯 디자인할 화면들

### 1. 로그인 화면 (Sign In)
#### 필수 구성요소
- [ ] **로고/브랜딩** 영역 (상단)
- [ ] **이메일 입력 필드**
  - 플레이스홀더: "이메일을 입력하세요"
  - 키보드 타입: 이메일
  - 유효성 검증 상태 표시
- [ ] **패스워드 입력 필드**
  - 플레이스홀더: "패스워드를 입력하세요"
  - 보기/숨기기 토글 아이콘
  - 최소 8자 힌트
- [ ] **로그인 버튼**
  - Primary 스타일
  - 로딩 상태 표시
- [ ] **회원가입 링크**
  - "계정이 없으신가요? 회원가입"
- [ ] **패스워드 찾기 링크** (향후 확장용)

#### 상태별 디자인
- **기본 상태**: 깔끔하고 접근 가능한 디자인
- **입력 중**: 포커스 상태, 실시간 유효성 검증
- **로딩 상태**: 버튼 스피너, 입력 필드 비활성화
- **에러 상태**: 에러 메시지, 적절한 색상 표시

### 2. 회원가입 화면 (Sign Up)
#### 필수 구성요소
- [ ] **로고/브랜딩** 영역
- [ ] **이메일 입력 필드**
  - 중복 확인 상태 표시
  - 실시간 유효성 검증
- [ ] **패스워드 입력 필드**
  - 강도 표시기 (약함/보통/강함)
  - 요구사항 체크리스트
- [ ] **패스워드 확인 필드**
  - 일치 여부 실시간 표시
- [ ] **닉네임 입력 필드** (선택사항)
  - 플레이스홀더: "닉네임 (선택사항)"
- [ ] **이용약관 체크박스**
  - "이용약관 및 개인정보처리방침에 동의합니다"
- [ ] **회원가입 버튼**
  - 모든 조건 충족 시 활성화
- [ ] **로그인 링크**
  - "이미 계정이 있으신가요? 로그인"

#### 패스워드 강도 요구사항 표시
```
✓ 8자 이상
✓ 영문 대소문자 포함  
✓ 숫자 포함
✓ 특수문자 포함
```

### 3. 환영 화면 (Welcome/Onboarding)
로그인 성공 후 첫 화면:
- [ ] **환영 메시지**
  - "InsightFlo에 오신 것을 환영합니다!"
- [ ] **앱 소개** (간략한 3-4개 포인트)
  - 개인화된 뉴스 피드
  - 키워드 기반 맞춤 추천
  - 북마크 및 오프라인 읽기
- [ ] **시작하기 버튼**

### 4. 에러 상태 디자인
다양한 에러 상황별 디자인:
- **네트워크 에러**: "인터넷 연결을 확인해주세요"
- **서버 에러**: "잠시 후 다시 시도해주세요"  
- **잘못된 입력**: 필드별 구체적인 에러 메시지
- **로그인 실패**: "이메일 또는 패스워드를 확인해주세요"

## 🎨 디자인 가이드라인

### 색상 팔레트
Backend팀이 설정한 색상 체계와 일치:
```
Primary: #2563EB (Blue)
Secondary: #64748B (Slate)
Success: #10B981 (Green) 
Error: #EF4444 (Red)
Warning: #F59E0B (Amber)
```

### 타이포그래피
- **제목**: Bold, 24px
- **부제목**: Medium, 18px
- **본문**: Regular, 16px
- **라벨**: Medium, 14px
- **힌트**: Regular, 12px

### 간격 및 레이아웃
- **화면 패딩**: 24px
- **컴포넌트 간격**: 16px  
- **입력 필드 높이**: 56px
- **버튼 높이**: 48px
- **모서리 둥글기**: 8px

### 접근성 고려사항
- [ ] **색맹 대응**: 색상만으로 정보 전달 금지
- [ ] **터치 영역**: 최소 44px × 44px
- [ ] **대비율**: WCAG 2.1 AA 기준 (4.5:1 이상)
- [ ] **스크린 리더**: 의미있는 라벨 제공
- [ ] **키보드 네비게이션**: 논리적 Tab 순서

## 📱 반응형 디자인

### 화면 크기별 대응
- **Small (< 360px)**: 컴팩트한 레이아웃, 필수 요소 우선
- **Medium (360-768px)**: 표준 모바일 레이아웃
- **Large (> 768px)**: 태블릿 최적화, 여백 활용

### 가로/세로 모드
- **세로 모드**: 기본 레이아웃
- **가로 모드**: 2컬럼 또는 중앙 정렬 고려

## 🎯 사용자 경험 (UX) 요구사항

### 사용성 원칙
1. **직관성**: 첫 사용자도 쉽게 이해 가능
2. **일관성**: 앱 전체와 일치하는 디자인 패턴
3. **피드백**: 모든 액션에 즉각적인 반응
4. **효율성**: 최소한의 단계로 목표 달성
5. **에러 예방**: 실수할 수 없는 구조

### 플로우 최적화
- **로그인**: 2단계 (이메일/패스워드 → 로그인)
- **회원가입**: 3-4단계 (정보 입력 → 약관 동의 → 완료)
- **에러 복구**: 명확한 안내와 해결 방법 제시

## 📋 완료 기준
- [ ] 모든 필수 화면 디자인 완성
- [ ] 상태별 디자인 완성 (기본/로딩/에러)
- [ ] 반응형 레이아웃 적용
- [ ] 접근성 가이드라인 준수
- [ ] 컴포넌트 스펙 문서화

## 📝 결과물
완료 후 다음을 project root 의 `management/contracts/interfaces/`에 문서화해주세요:
- UI 컴포넌트 스펙 가이드
- 디자인 토큰 정의서  
- 사용자 플로우 다이어그램

## 💻 개발 연동 정보

### Backend API (참고용)
```
POST /api/auth/signup
POST /api/auth/signin  
POST /api/auth/refresh
GET /api/auth/profile
```

### Flutter 구조 (참고용)
```
features/auth/presentation/
├── pages/
│   ├── sign_in_page.dart
│   ├── sign_up_page.dart
│   └── welcome_page.dart
├── widgets/
│   ├── auth_text_field.dart
│   ├── auth_button.dart
│   └── password_strength_indicator.dart
```

## 💬 병렬 작업 안내
이 디자인 작업과 동시에 진행되는 작업들:
- Backend: JWT 인증 API 구현
- Frontend: Flutter 앱 아키텍처 구성
- DevOps: Supabase 데이터베이스 설정

디자인 완성 후 Frontend팀이 즉시 UI 구현에 착수할 수 있습니다.

---
**생성일**: 2025-09-08  
**상태**: 요청됨  
**완료 후**: Task 6 (인증 UI 구현) 시작 가능